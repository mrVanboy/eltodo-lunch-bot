---
# Globally defined image
image: golang:1.10

stages:
  - test
  - build
  - deploy


before_script:
  # Download the binary to bin folder in $GOPATH
  - curl -L -s https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o /usr/bin/dep
  # Make the binary executable
  - chmod +x /usr/bin/dep
  # Set up GOPATH
  - GOPATH=$CI_PROJECT_DIR
  - cd src/eltodo-lunch-bot
  - dep ensure

test 1:2:
  stage: test
  script:
    - go vet ./...
  cache:
    paths:
    - pkg
  except:
    - schedules

build-image:
  image: docker
  before_script:
    - echo "build image job"
  script:
    - docker build -q .
  stage: build
  except:
      - schedules

upload-develop:
  image: docker
  stage: deploy
  before_script:
    - echo "upload image job"
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker build -q -t $CI_REGISTRY_IMAGE:develop .
    - docker push $CI_REGISTRY_IMAGE:develop
  only:
    - master
  except:
    - schedules

upload-latest:
  image: docker
  stage: deploy
  before_script:
    - echo "upload image job"
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - docker build -q -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_BUILD_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
  only:
    - tag
    - /^\d+.\d+.\d+$/
  except:
    - branches
    - triggers
    - schedules

run-from-schedule:
  image: docker
  stage: deploy
  variables:
    GIT_STRATEGY: none
  before_script:
    - echo "=== Running application from schedule ===="
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
  script:
    - |
      docker run --rm \
      	-e WEBHOOK_MAIN_URL=$WEBHOOK_MAIN_URL \
      	-e WEBHOOK_DEBUG_URL=$WEBHOOK_DEBUG_URL \
      	-e URL_BK=$URL_BK \
      	-e URL_DC=$URL_DC \
      	-e URL_NK=$URL_NK \
      	-e URL_PP=$URL_PP \
        $CI_REGISTRY_IMAGE:latest -run_once
  only:
    - schedules
